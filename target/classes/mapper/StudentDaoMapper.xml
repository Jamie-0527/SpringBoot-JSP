<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--namespace需要对应dao接口的完全限定名 （包名+类名）-->
<mapper namespace="com.min.graduation.dao.StudentDao">

    <resultMap id="StudentMapper" type="Student">
        <id property="s_id" column="s_id"/>
        <result property="s_name" column="s_name"/>
        <result property="s_class_no" column="s_class_no"/>
        <result property="s_phone" column="s_phone"/>
        <result property="s_college" column="s_college"/>
        <result property="company_name" column="company_name"/>

        <association property="grade" resultMap="GradeMapper"/>
    </resultMap>

    <!--班级-->
    <resultMap id="GradeMapper" type="Grade">
        <id property="c_id" column="c_id"/>
        <id property="t_id" column="t_id"/>
        <result property="c_name" column="c_name"/>
    </resultMap>

    <!--查询所有-->
    <select id="findAll" resultType="Student">
        select s_id,s_name,s_class_no,s_phone,s_college,company_name from student
    </select>

    <!--根据名字模糊查询-->
    <select id="findByName" parameterType="String" resultType="Student">
        select s_id,s_name,s_class_no,s_phone,s_college,company_name from student
        <trim prefix="where" prefixOverrides="and | or">
            <if test="name != null and name != ''">
                s_name like concat('%',#{name},'%')
            </if>
        </trim>
    </select>

    <!--查询指定学号查询信息-->
    <select id="findById" parameterType="String" resultType="Student">
        select s_id,s_name,s_class_no,s_phone,s_college,company_name from student
        <trim prefix="where" prefixOverrides="and | or">
            <if test="sid != null and sid != ''">
                s_id = #{sid}
            </if>
        </trim>
    </select>

    <!--添加用户-->
    <insert id="addStudent" parameterType="Student">
        insert into student (s_id,s_name,s_class_no,s_phone,s_college,company_name)
        values (#{s_id},#{s_name},#{s_class_no},#{s_phone},#{s_college},#{company_name})
    </insert>

    <!--更新用户信息-->
    <update id="updateStudent" parameterType="Student">
        update student
        <trim prefix="set" suffix="where s_id=#{s_id}" suffixOverrides=",">
            <if test="s_name != null and s_name != ''">s_name=#{s_name},</if>
            <if test="s_class_no != null and s_class_no != ''">s_class_no=#{s_class_no},</if>
            <if test="s_phone != null and s_phone != ''">s_phone=#{s_phone},</if>
            <if test="s_college != null and s_college != ''">s_college=#{s_college},</if>
            <if test="company_name != null and company_name != ''">company_name=#{company_name},</if>
        </trim>
    </update>

    <!--根据ID删除用户-->
    <delete id="deleteStudent" parameterType="String">
        delete from student where s_id = #{s_id}
    </delete>



    <!--查询个人信息-->
    <select id="personInformation" resultMap="StudentMapper" parameterType="String">
        select s.s_id,s.s_name,g.c_name,s.s_phone,s.s_college,s.company_name from student s
                                                left join grade g on s.s_class_no = g.c_id
												where s.s_id = '${sid}'
    </select>
    <!--查询班级同学信息-->
    <select id="findGradeStudent" resultMap="StudentMapper" parameterType="String">
        select s.s_id,s.s_name,g.c_name,s.s_phone,s.s_college,s.company_name from student s
                                                left join grade g on s.s_class_no=g.c_id
												where g.c_name = '${gradeName}'
    </select>
    <!--根据班级ID查询班级信息-->
    <select id="findGradeInfo" parameterType="String" resultMap="GradeMapper">
        select * from grade where c_name = #{className}
    </select>

    <!--查询我提交的实训报告-->
    <select id="myReport" parameterType="String" resultType="Report">
        select * from training_report
        where s_id = #{s_id}
    </select>

</mapper>